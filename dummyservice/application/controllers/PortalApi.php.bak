<?php
defined('BASEPATH') or exit('No direct script access allowed');

require_once APPPATH . 'libraries/HTTP/Request2.php'; // Adjust the path as necessary

class PortalApi extends MY_Controller
{
    public $access_token;
    public function __construct()
    {
        parent::__construct();
        if (!class_exists('HTTP_Request2')) {
            print "no Lib found";
            return;
        }
    }
    public function main()
    {
        $xaction = 'read';
        $dtinput = '';
        if ($this->uri->segment(5)) {
            $xaction = $this->uri->segment(5);
            $json = file_get_contents('php://input');
            $dtinput = json_decode($json, true);
        } else {
            if ($module !== $moduleview) {
                $dtinput = array_merge($this->input->post(NULL, TRUE), $this->input->get(NULL, TRUE));
                $xaction = 'read';
            } else {
                $json = file_get_contents('php://input');
                $dtinput = json_decode($json, true);
                $xaction = $dtinput['method'];
            }
        }
        $dtinput = array_merge($dtinput, array(
            'VUSERNAME' => $access_token['data']['VUSERNAME'],
            'ID_COMPANY' => $access_token['data']['ID_COMPANY']
        ));

        $data = $this->$xaction($dtinput);
        print($data);
    }

    public function testStatus($param = null)
    {
        // something here ... 
        if (isset($param["nomorAju"])) {
            $noAju = str_replace("-", "", $param['nomorAju']);
            #print $noAju ; 
            $param = array("NOMORAJU" => $noAju, "upil" => "dapet");
        } else {
            $param = array("NOMORAJU" => "15034000943920240305000334", "upil" => "nyangkut");
        }
        if (isset($_GET["nomorAju"])) {
            $noAju = str_replace("-", "", $_GET['nomorAju']);
            #print $noAju ; 
            $param = array("NOMORAJU" => $noAju, "upil" => "dapet");
        }
        $this->getStatus($param);
    }

    public function testDownload($param)
    {
        // something here ... 

        if (isset($_GET["nomorAju"])) {
            $noAju = str_replace("-", "", $_GET['nomorAju']);
            #print $noAju ; 
            $param = array("NOMORAJU" => $noAju, "upil" => "dapet");
        }
        if (isset($param["NOMORAJU"])) {
            $noAju = str_replace("-", "", $param['NOMORAJU']);
            $data = array("NOMORAJU" => $noAju, "upil" => "dapet");
        } else {
            $data = array("NOMORAJU" => "00003000943920240305900376", "upil" => "nyangkut");
        }
        $retMe =  $this->getFileResponse($data);
        return json_encode($retMe);
    }
    public function testBrowse($param = null)
    {
        // paging ...
        /* if (array_key_exists('limit', $param)) {
            $data = array("limit" => $param['limit'], "page" => $param['page']);
        }
        */
        /*
        if (array_key_exists('filter', $param)) {
            #$keyval = json_decode($param['filter'], true);
            $data = json_decode($param['filter'], true);
        }*/

        // something here ... 
        if (isset($param["nomorAju"])) {
            $noAju = str_replace("-", "", $param['nomorAju']);
            $data = array("NOMORAJU" => $noAju, "upil" => "dapet");
        } else {
            $data = array("NOMORAJU" => "00003000943920240305900376", "upil" => "nyangkut");
        }
        print(($this->getAll27Docs($data)));
    }


    public function login()
    {
        // Generate dynamic cookie value
        $cookieValue = $this->generateCookieValue();
        // Make API request with dynamic cookie value
        try {
            $request = new HTTP_Request2('https://apis-gw.beacukai.go.id/nle-oauth/v1/user/login');
            #$request->setUrl('https://apis-gw.beacukai.go.id/nle-oauth/v1/user/login/');
            $request->setMethod(HTTP_Request2::METHOD_POST);
            #$request->addPostParameter(array('username'=>'pemi_eds', 'password'=>'Pemi2022'));

            $request->setConfig(array(
                'follow_redirects' => TRUE
            ));
            $request->setHeader(array(
                'Content-Type' => 'application/json',
                'Cookie' => 'Customs_Cookie=' . $cookieValue
            ));
            // mager mode  :p
            $request->setBody('{"username":"pemi_eds", "password":"Pemi2022"}');

            $response = $request->send();
            if ($response->getStatus() == 200) {
                #echo $response->getBody();
                $xReturn =  json_decode($response->getBody(), true);
                $access_token = $xReturn['item']['access_token'];
                # print ($access_token);
                $myRet = array("status" => "true", "data" => $access_token);
            } else {
                $xReturn =  'Unexpected HTTP status: ' . $response->getStatus() . ' ' . $response->getReasonPhrase();
                $myRet = array("status" => "false", "data" => $xReturn);
            }
        } catch (HTTP_Request2_Exception $e) {
            $myRet = array("status" => "false", "data" => $e->getMessage());
        }
        return $myRet;
    }

    // Function to generate dynamic cookie value
    private function generateCookieValue()
    {
        // Implement your logic to generate a dynamic cookie value here
        // For example, you can generate a random string
        return bin2hex(random_bytes(16)); // Generate a random 32-character hex string
    }

    public function parseUrl($url, $method = "POST", $param = null)
    {
        // Generate dynamic cookie value

        #print $url ; 
        $cookieValue = $this->generateCookieValue();
        if (!isset($url)) {
            print "Error";
            return;
        }

        // Make API request with dynamic cookie value
        try {
            // get access_token 
            $myToken = $this->login();
            if ($myToken['status'] == "true") {
                $access_token = "Bearer " . $myToken['data'];
            } else {
                print "error get token";
                $myToken = $this->login();
                $access_token = "Bearer " . $myToken['data'];
                return;
            }
            // check for valid method, give error instead 
            if ($method == "POST") {
                $request = new HTTP_Request2($url);
                $request->setMethod(HTTP_Request2::METHOD_POST);
                // parsing the body / extra header parameters
                $request->setBody($param);
            } elseif ($method == "GET") {
                $request = new HTTP_Request2($url);
                $request->setMethod(HTTP_Request2::METHOD_GET);
            } else {
                print "ERROR METHOD";
                return;
            }


            // parsing option(s)
            $request->setConfig(array(
                'follow_redirects' => TRUE
            ));


            // content-type should be dynamic 
            // get access token from login() 
            $request->setHeader(array(
                'Content-Type' => 'application/json',
                'Cookie' => 'Customs_Cookie=' . $cookieValue,
                'Authorization' => $access_token,
            ));

            // commit to API 
            $response = $request->send();

            #$this->var_dump_pre($response->getHeader()) ; 
            #die(); 

            // catch response 
            if ($response->getStatus() == 200) {
                if ($param['type'] == "download") {
                    #$filePath = APPPATH. "download/portal_data/" ;
                    $filePath = "D:/uploads/plb/from_portal/";

                    $headers = $response->getHeader();
                    $cdValue = $headers['content-disposition'];
                    preg_match('/filename=(.+)/', $cdValue, $matches);
                    if (isset($matches[1])) {
                        $filename = trim($matches[1], '"');
                    }

                    #print $filename ; 
                    #$this->var_dump_pre($headers);
                    #die();

                    $filename = $filePath . $filename;
                    #die($filename);
                    file_put_contents($filename, $response->getBody());
                    #print $filename ;
                    $myRet = array("status" => "true", "data" => $filename);
                } else {
                    $xReturn =  json_decode($response->getBody(), true);
                    #$this->var_dump_pre($response->getHeader());
                    $myRet = array("status" => "true", "data" => $xReturn);
                }
            } else {
                $xReturn =  'Unexpected HTTP status: ' . $response->getStatus() . ' ' . $response->getReasonPhrase();
                $myRet = array("status" => "false", "data" => $xReturn);
                return $myRet;
            }
        } catch (HTTP_Request2_Exception $e) {
            $myRet = array("status" => "false", "data" => $e->getMessage());
        }
        return $myRet;
    }

    /**
     *  usage : get status perAJU          
     *  access_method : API 
     *  url : {API_URL}/openapi/status/:nomorAju
     *  param : array({"nomoraju"})
     *  pre-access : login / access token & auth bearer needed 
     * 
     * 
     */
    /** 
     * sample response (portal.beacukai.go.id)
     * {
     *       "dataStatus":[{
     *           "nomorAju":"Nomor Aju",
     *           "kodeStatus":"Kode Status",
     *           "nomorDaftar":"Nomor Daftar",
     *           "tanggalDaftar":"Tanggal Daftar",
     *           "waktuStatus":"Waktu Status",
     *           "keterangan":"Keterangan"
     *       }],
     *       "dataRespon":[{
     *           "nomorAju":"Nomor Aju",
     *           "kodeRespon":"Kode Respon",
     *           "nomorDaftar":"Nomor Daftar",
     *           "tanggalDaftar":"Tanggal Daftar",
     *           "nomorRespon":"Nomor Respon",
     *           "tanggalRespon":"Tanggal Respon",
     *           "waktuRespon":"Waktu Respon",
     *           "waktuStatus":"Waktu Status",
     *           "keterangan":"Keterangan",
     *           "pesan":[
     *               { "uraian1", "uraian2" }
     *           ],
     *           "Pdf":"Base64encode PDF file"
     *        }]
     *       }
     */
    public function getStatus($param)
    {
        // idUser :: 56ff5123-5102-4870-9999-d35fda47c018
        // https://apis-gw.beacukai.go.id/excel-service/v1/ekspor-xml/Xlsx?nomorAju=00002301061820240304500046&idUser=56ff5123-5102-4870-9999-d35fda47c018
        // https://apis-gw.beacukai.go.id/openapi/status/15032702559920231108501504
        /*
        {
            "dataStatus": [
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "001",
                    "waktuStatus": "2023-11-08 13:16:24",
                    "keterangan": "Perekaman Dokumen",
                    "kodeDokumen": "27"
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "110",
                    "waktuStatus": "2023-11-08 17:41:08.102",
                    "keterangan": "Validasi",
                    "kodeDokumen": "27"
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "230",
                    "waktuStatus": "2023-11-08 19:57:43.186",
                    "keterangan": "Siap Jalur",
                    "kodeDokumen": "27"
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "510",
                    "waktuStatus": "2023-11-13 13:30:56.288",
                    "keterangan": "Gate In TPB/KEK",
                    "kodeDokumen": "27"
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "512",
                    "waktuStatus": "2023-11-08 19:58:30.08",
                    "keterangan": "Stuffing",
                    "kodeDokumen": "27"
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "800",
                    "waktuStatus": "2023-11-16 14:49:37.618",
                    "keterangan": "Selesai Proses",
                    "kodeDokumen": "27"
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "511",
                    "waktuStatus": "2023-11-16 14:48:24.442",
                    "keterangan": "Pembongkaran",
                    "kodeDokumen": "27"
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "514",
                    "waktuStatus": "2023-11-13 13:17:18.486",
                    "keterangan": "Gate Out TPB/KEK",
                    "kodeDokumen": "27"
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "08-11-2023",
                    "kodeProses": "240",
                    "waktuStatus": "2023-11-08 19:58:09.314",
                    "keterangan": "Penjaluran",
                    "kodeDokumen": "27"
                }
            ],
            "dataRespon": [
                {
                    "nomorAju": "15032702559920231108501504",
                    "kodeRespon": "2703",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "2023-11-08 19:58:30",
                    "nomorRespon": "920170/KBC.0702/2023",
                    "tanggalRespon": "2023-11-08 19:58:30",
                    "waktuRespon": "2023-11-08 19:58:30",
                    "keterangan": "SPPB",
                    "pesan": [],
                    "pdf": "respon/2023/11/8/20/8e6d7504-ff03-492b-aa00-33186fae4623-respon-ad83a06b-5d01-40ae-b57a-379b3b45dbd7.pdf",
                    "kodeDokumen": "27",
                    "billingPungutans": null
                },
                {
                    "nomorAju": "15032702559920231108501504",
                    "kodeRespon": "2705",
                    "nomorDaftar": "919998",
                    "tanggalDaftar": "2023-11-08 19:58:30",
                    "nomorRespon": null,
                    "tanggalRespon": "2023-11-16 14:49:37",
                    "waktuRespon": "2023-11-16 14:49:37",
                    "keterangan": "SPPD",
                    "pesan": [],
                    "pdf": null,
                    "kodeDokumen": "27",
                    "billingPungutans": null
                }
            ],
            "status": "Success",
            "message": "Data Ditemukan"
        }
        */
        $idUser = "56ff5123-5102-4870-9999-d35fda47c018";
        if (isset($param)) {
            $noAju = $param['NOMORAJU'];
            $data = array("idUser" => '56ff5123-5102-4870-9999-d35fda47c018', 'type' => 'return',);
            #$url = "https://apis-gw.beacukai.go.id/excel-service/v1/ekspor-xml/Xlsx?nomorAju=". $noAju."&idUser=". $idUser ; 
            $url = "https://apis-gw.beacukai.go.id/openapi/status/" . $noAju;
            $xReturn = $this->parseUrl($url, "GET", $data);
            if (array_key_exists('dataRespon', $xReturn['data'])) {
                $data = $xReturn['data']['dataRespon'];
                #$this->var_dump_pre($data);

                echo "<h1> Nomor AJU : " . $data[0]['nomorAju'] . " </h1>";
                echo "<h1> STATUS: " . $data[0]['keterangan'] . " </h1>";
                echo "<h1> Nomor Daftar: " . $data[0]['nomorDaftar'] . " </h1>";
                echo "<h1> Tanggal Daftar: " . $data[0]['tanggalDaftar'] . " </h1>";
                echo "<h1> Nomor Respon: " . $data[0]['nomorRespon'] . " </h1>";
                #die("upil");
            }
            return json_decode($data);

            #print_r($xReturn['data']['dataRespon']);
            #$this->var_dump_pre($xReturn);
        } else {
            return "failed";
        }
        # return $data;
    }
    function var_dump_pre($mixed = null)
    {
        echo '<pre>';
        var_dump($mixed);
        echo '</pre>';
        return null;
    }

    function getFileResponse($param)
    {
        $idUser = "56ff5123-5102-4870-9999-d35fda47c018";
        if (isset($param)) {
            $noAju = $param['NOMORAJU'];
            $filename = 'BC27_' . $noAju . ".xlsx";
            #die($noAju);
            $data = array("idUser" => '56ff5123-5102-4870-9999-d35fda47c018', 'type' => 'download', 'filename' => $filename, "NOMORAJU" => $noAju,);
            $url = "https://apis-gw.beacukai.go.id/excel-service/v1/ekspor-xml/Xlsx?nomorAju=" . $noAju . "&idUser=" . $idUser;
            $xReturn = $this->parseUrl($url, "GET", $data);
            #$this->var_dump_pre($xReturn);
            if ($xReturn['status'] == 'true') {
                $data['FilePath'] = $filename;
                $data['FileName'] = $noAju;
                $data['PNOMOR_AJU'] = $noAju;
                $data['VUSERNAME'] = 'SP_SYNC';
                $this->load->model('Mportal_data');
                $x = $this->Mportal_data->process_upload_form($data);
                #print_r($x);
                if ($x) {
                    $z =  $this->syncToDBIT($data);
                    return json_decode($z);
                } else {
                    return json_decode($x);
                }
            } else {
                $retMe = array("success" => "failed", "message" => "Get Portal Data Failed " + $xReturn['data']);
                return $retMe;
            }
        } else {
            $retMe = array("success" => "failed", "message" => "NOMOR AJU tidak terbaca ");
            return $retMe;
        }
    }
    function getAll27Docs($param)
    {
        $idUser = "56ff5123-5102-4870-9999-d35fda47c018";
        if (isset($param)) {
            # $noAju = "&nomorAju=" . $param['filter']['property']['nomorAju'];
            #$data = array("idUser" => '56ff5123-5102-4870-9999-d35fda47c018', 'type' => 'download', 'filename' => $filename, "NOMORAJU" => $noAju,);
            $data = array("idUser" => '56ff5123-5102-4870-9999-d35fda47c018', 'type' => 'return',);
            #$page = '&size=' . $param['limit'] . '&page=' . $param['page'];
            $url = "https://apis-gw.beacukai.go.id/v2/browse-service/v1/browse/dokumen-pabean-portal?nomorIdentitas=010618684092000namaDokumen=27&size=500&page=1&kodeDokumen=27&idUser=56ff5123-5102-4870-9999-d35fda47c018"; //. $noAju . $page;
            #die($url);
            #GET https://apis-gw.beacukai.go.id/v2/browse-service/v1/browse/dokumen-pabean-portal?nomorIdentitas=010618684092000&nomorAju=858&size=10&page=1&idUser=56ff5123-5102-4870-9999-d35fda47c018
            $xReturn = $this->parseUrl($url, "GET", $data);
            #$this->var_dump_pre($xReturn);
            return json_encode($xReturn['data']);
        } else {
            return "failed";
        }
    }

    function syncToDBIT($param)
    {
        $this->load->model('Mportal_data');
        $param['PNOMORAJU'] = $param['FileName'];
        $x = $this->Mportal_data->sync_to_dbit($param);
        #print_r($x);
        return $x;
    }
}